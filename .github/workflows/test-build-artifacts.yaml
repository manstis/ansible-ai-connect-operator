name: Test Build Operator Bundle and Catalog index

on:
  workflow_dispatch:
    inputs:
      version:
        description: 'Version to build'
        required: true
      repository:
        description: 'Target quay.io repository'
        default: 'quay.io/manstis'
        required: true

jobs:
  release:
    runs-on: ubuntu-latest

    steps:
      - name: Verify inputs
        run: |
          set -e

          if [[ ${{ github.event.inputs.version }} == "" ]]; then
            >&2 echo "Set version to continue."
            exit 1
          fi
          if [[ ${{ github.event.inputs.repository }} == "" ]]; then
            >&2 echo "Set quay.io repository to continue."
            exit 1
          fi
          
          exit 0

      - name: Log into registry ghcr.io
        uses: docker/login-action@343f7c4344506bcbf9b4de18042ae17996df046d # v3.0.0
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Log into registry
        uses: docker/login-action@343f7c4344506bcbf9b4de18042ae17996df046d # v3.0.0
        with:
          registry: ${{ github.event.inputs.repository }}
          username: ${{ secrets.QUAY_USER }}
          password: ${{ secrets.QUAY_TOKEN }}

      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
          fetch-tags: true

      - name: Get existing tags
        id: existing_tags
        uses: greboid/docker-tags-action@v1
        with:
          repository: "ansible-ai-connect-bundle"
          registries: ${{ github.event.inputs.repository }}
          fullName: true
        env:
          INPUT_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Get existing versions
        id: existing_versions
        run: |
          set -e
          
          # Convert comma separated list into an array
          tags=${{ steps.existing_tags.outputs.tag }}
          tags_array=(${tags//,/ })
          
          # Filter array by tags that end with a semver 
          filtered_tags=()
          for i in "${!tags_array[@]}" ; do [[ ${tags_array[$i]} =~ ^.+:[0-9]+\.[0-9]+\.[0-9]+$ ]] && filtered_tags+=(${tags_array[$i]}) ; done
          
          # Include the version being built
          filtered_tags+=(${{ github.event.inputs.repository }}/ansible-ai-connect-bundle:${{ github.event.inputs.version }})
          
          # Convert array back to comma separated list
          output_tags=${filtered_tags[@]}
          output=${output_tags// /,}
          
          echo "BUNDLE_IMGS=${output}" >> $GITHUB_ENV
          
          exit 0

      - name: Debugging
        id: debugging
        run: |
          echo ${BUNDLE_IMGS}

      # ===================
      # Operator
      # -------------------
      - name: Build and Store Image @ghcr
        run: |
          BUILD_ARGS="--build-arg OPERATOR_VERSION=${{ github.event.inputs.version }}" \
          IMG=ghcr.io/${{ github.repository_owner }}/ansible-ai-connect-operator:${{ github.sha }} \
          make docker-buildx

      - name: Publish Image to registry
        run: |
          docker buildx imagetools create ghcr.io/${{ github.repository_owner }}/ansible-ai-connect-operator:${{ github.sha }} -t ${{ github.event.inputs.repository }}/ansible-ai-connect-operator:${{ github.event.inputs.version }}
      # ===================

      # ===================
      # Operator bundle
      # -------------------
      - name: Build Bundle image
        run: |
          VERSION=${{ github.event.inputs.version }} \ 
          IMG=${{ github.event.inputs.repository }}/ansible-ai-connect-operator:${{ github.event.inputs.version }} \ 
          BUNDLE_IMG=${{ github.event.inputs.repository }}/ansible-ai-connect-bundle:${{ github.event.inputs.version }} \ 
          make bundle bundle-build

      - name: Push Bundle image
        uses: redhat-actions/push-to-registry@v2.7.1
        with:
          image: ansible-ai-connect-bundle
          tags: ${{ github.event.inputs.version }}
          registry: ${{ github.event.inputs.repository }}
          username: ${{ secrets.QUAY_USER }}
          password: ${{ secrets.QUAY_TOKEN }}
      # ===================

      # ===================
      # Operator catalog
      # -------------------
      - name: Build Catalog image
        run: |
          CATALOG_IMG=${{ github.event.inputs.repository }}/ansible-ai-connect-catalog:${{ github.event.inputs.version }} \ 
          BUNDLE_IMGS=${BUNDLE_IMGS} \ 
          make catalog-build

      - name: Push Catalog image
        uses: redhat-actions/push-to-registry@v2.7.1
        with:
          image: ansible-ai-connect-catalog
          tags: ${{ github.event.inputs.version }}
          registry: ${{ github.event.inputs.repository }}
          username: ${{ secrets.QUAY_USER }}
          password: ${{ secrets.QUAY_TOKEN }}
      # ===================
